{"version":3,"sources":["utils/useWinSize.ts","App.tsx","index.tsx"],"names":["getWinSize","document","documentElement","width","clientWidth","height","clientHeight","useWinSize","useState","size","setSize","window","addEventListener","removeEventListener","onResize","useCallback","useEffect","dayjs","extend","duration","audio","Audio","options","loop","autoplay","animationData","heartData","App","playing","setPlaying","Date","time","setTime","diff","setDiff","timer","setTimer","setInterval","togglePlaying","clearInterval","pause","play","timerText","subtract","format","btnText","now","lottieProps","isPaused","style","onClick","className","margin","ReactDOM","render","getElementById"],"mappings":"gOAEMA,G,OAAa,WAAO,IAAD,EACeC,SAASC,gBAE/C,MADa,CAAEC,MAFQ,EACfC,YAC2BC,OAFZ,EACFC,gBAmBRC,EAdI,WAAO,IAAD,EACCC,mBAASR,KADV,mBAChBS,EADgB,KACVC,EADU,OAE2BC,OAA1CC,EAFe,EAEfA,iBAAkBC,EAFH,EAEGA,oBACpBC,EAAWC,uBAAY,kBAAML,EAAQV,OAAe,IAQ1D,OANAgB,qBAAU,WAER,OADAJ,EAAiB,SAAUE,GACpB,kBAAMD,EAAoB,SAAUC,MAE1C,IAEIL,G,eCRTQ,IAAMC,OAAOC,KAEb,IACMC,EAAQ,IAAIC,MADN,6DAGNC,EAAU,CACdC,MAAM,EACNC,UAAU,EACVC,cAAeC,GAwDFC,EArDO,WACpB,IAAMlB,EAAOF,IADa,EAEIC,oBAAkB,GAFtB,mBAEnBoB,EAFmB,KAEVC,EAFU,OAGFrB,mBAAe,IAAIsB,MAHjB,mBAGnBC,EAHmB,KAGbC,EAHa,OAIFxB,mBAAiB,GAJf,mBAInByB,EAJmB,KAIbC,EAJa,OAKA1B,mBAAc,GALd,mBAKnB2B,EALmB,KAKZC,EALY,KAO1BC,aAAY,kBAAML,EAAQ,IAAIF,QAAS,KAEvC,IAAMQ,EAAgB,WAChBV,EACFQ,EAASC,aAAY,kBAAMH,GAAQ,SAACD,GAAD,OAAUA,EAAO,SAAO,OAE3DC,EAAQ,GACRK,cAAcJ,IAEhBN,GAAYD,IAGdZ,qBAAU,WACRY,EAAUR,EAAMoB,QAAUpB,EAAMqB,SAC/B,CAACb,IAEJ,IAAMc,EAAYzB,IAAMgB,GAAMU,SAAS,EAAG,KAAKC,OAAO,YAChDC,EAAUjB,EAAU,eAAO,eAC3BkB,EAAM7B,IAAMc,GAAMa,OAAO,uBAEzBG,EAAc,CAClB5C,MAAO,QACPE,OAAQ,QACRiB,QAASA,EACT0B,SAAUpB,GAGZ,OACE,sBACEqB,MAAK,eAAOxC,GACZyC,QAASZ,EACTa,UAAS,aAASvB,EAAyB,GAAf,cAH9B,UAKE,sBAAKuB,UAAU,QAAf,UACE,gDACA,cAAC,IAAD,2BAAYJ,GAAZ,IAAyBE,MAAO,CAAEG,OAAQ,SAE5C,qBAAKD,UAAS,gBAAYvB,EAAoC,GAA1B,yBAApC,SACGc,IAEH,wBAAQQ,QAASZ,EAAjB,SAAiCO,IACjC,qBAAKM,UAAS,uBAAmBvB,EAAsB,GAAZ,WAA3C,SAA8DkB,QCjEpEO,IAASC,OAAO,cAAC,EAAD,IAASrD,SAASsD,eAAe,U","file":"static/js/main.bde53fe8.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst getWinSize = () => {\n  const { clientWidth, clientHeight } = document.documentElement;\n  const size = { width: clientWidth, height: clientHeight };\n  return size;\n};\n\nconst useWinSize = () => {\n  const [size, setSize] = useState(getWinSize());\n  const { addEventListener, removeEventListener } = window;\n  const onResize = useCallback(() => setSize(getWinSize()), []);\n\n  useEffect(() => {\n    addEventListener('resize', onResize);\n    return () => removeEventListener('resize', onResize);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return size;\n};\n\nexport default useWinSize;\n","import React, { useEffect, useState } from 'react';\nimport Lottie from 'react-lottie';\nimport duration from 'dayjs/plugin/duration';\nimport dayjs from 'dayjs';\nimport 'normalize.css';\n\nimport useWinSize from './utils/useWinSize';\nimport heartData from './assets/heart.json';\n\nimport './style.css';\n\ndayjs.extend(duration);\n\nconst url = 'http://music.163.com/song/media/outer/url?id=17746129.mp3';\nconst audio = new Audio(url);\n\nconst options = {\n  loop: true,\n  autoplay: false,\n  animationData: heartData,\n};\n\nconst App: React.FC = () => {\n  const size = useWinSize();\n  const [playing, setPlaying] = useState<boolean>(true);\n  const [time, setTime] = useState<Date>(new Date());\n  const [diff, setDiff] = useState<number>(0);\n  const [timer, setTimer] = useState<any>(0);\n\n  setInterval(() => setTime(new Date()), 1000);\n\n  const togglePlaying = () => {\n    if (playing) {\n      setTimer(setInterval(() => setDiff((diff) => diff + 1000), 1000));\n    } else {\n      setDiff(0);\n      clearInterval(timer);\n    }\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    playing ? audio.pause() : audio.play();\n  }, [playing]);\n\n  const timerText = dayjs(diff).subtract(8, 'h').format('HH:mm:ss');\n  const btnText = playing ? '播放' : '暂停';\n  const now = dayjs(time).format('HH:mm:ss ddd. MMM.D');\n\n  const lottieProps = {\n    width: '16rem',\n    height: '16rem',\n    options: options,\n    isPaused: playing,\n  };\n\n  return (\n    <div\n      style={{ ...size }}\n      onClick={togglePlaying}\n      className={`bg ${!playing ? 'playing-bg' : ''}`}\n    >\n      <div className='title'>\n        <span>听雨</span>\n        <Lottie {...lottieProps} style={{ margin: 0 }} />\n      </div>\n      <div className={`timer ${!playing ? 'playing-timer playing' : ''}`}>\n        {timerText}\n      </div>\n      <button onClick={togglePlaying}>{btnText}</button>\n      <div className={`current-time ${!playing ? 'playing' : ''}`}>{now}</div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}